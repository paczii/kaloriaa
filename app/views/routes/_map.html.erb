

<% if @route.route == nil %>
<% else
  @driver = Driver.find(@route.driver_id)
  @store = Store.find(@driver.store_id)
%>

    <h4 id="showmap" align="center" style="display: block" ><a class="btn btn-success" onclick="inits2()" >Route anzeigen</a></h4>



    <div id="directions" style='width: 80%; height: 0%; display: block; margin-left: auto; margin-right: auto'></div>


    <script type="text/javascript">

      function inits2() {


        document.getElementById("directions").style.height = "400px";
        document.getElementById("showmap").style.display = "none";


        var directionsDisplay = new google.maps.DirectionsRenderer();
        var directionsService = new google.maps.DirectionsService();

        function calcRoute() {

          var origin = '<%= @store.city %> , <%= @store.zip %>  , <%= @store.street %> ';
          var destination = '<%= @store.city %> , <%= @store.zip %>  , <%= @store.street %> ';
          var waypointsarray = [ ];
          //     waypointsarray.push({location: "Berlin", stopover: true});


          <% routeline = @route.route %>
          <% sa = routeline.split("->") %>

          <% sa.each do |order| %>


          <% mycity = Customer.find(Order.find(order).customer_id).city %>
          <% myzip = Customer.find(Order.find(order).customer_id).zip %>
          <% mystreet = Customer.find(Order.find(order).customer_id).street %>

          <% myadresse = mycity + " , " + myzip.to_s + " , " + mystreet %>

          waypointsarray.push({location: "<%= myadresse %>", stopover: true});

          <% end %>


          var request = {
            origin: origin,
            destination: destination,
            waypoints: waypointsarray,
            travelMode: google.maps.TravelMode.DRIVING

          };
          directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
              directionsDisplay.setDirections(response);
            }
          });
        }

        calcRoute();

        var handler = Gmaps.build('Google');
        handler.buildMap({internal: {id: 'directions'}}, function () {
          directionsDisplay.setMap(handler.getMap());
          handler.fitMapToBounds();

        });


      }

    </script>

<% end %>